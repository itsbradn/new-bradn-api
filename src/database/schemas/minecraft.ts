import { Schema, Types, model } from "mongoose";
import { Minecraft } from "../../types/minecraft";

const MinecraftSchema = new Schema<Minecraft>({
  mojangCacheUntil: Date,
  hypixelCacheUntil: Date,
  uuid: {
    type: String,
    required: true,
    unique: true,
  },
  username: String,
  skin: {
    url: String,
    id: String,
  },
  cape: {
    url: String,
    id: String,
  },
  online: Boolean,
  currentlyPlaying: String,
  newPackageRank: String,
  monthlyPackageRank: String,
  rankPlusColor: String,
  monthlyRankColor: String,
  rank: String,
  prefix: String,
  firstLogin: Number,
  lastLogin: Number,
  achievementPoints: Number,
  totalRewards: Number,
  totalDailyRewards: Number,
  rewardStreak: Number,
  rewardScore: Number,
  views: Number,
  viewers: Array,
  karma: Number,
  experience: Number,
  level: Number,
  expToNextLevel: Number,
  levelExpFloor: Number,
  levelProgress: Number,
  thumbnailBuffer: Buffer,
  games: {
    tntGames: {
      wins: Number,
      winstreak: Number,
      coins: Number,
      particleEffect: String,
      deathEffect: String,
      voidMessage: String,
      hat: String,
      doubleJumpEffect: String,
      playtime: String,
      settings: {
        wizardsActionBar: String,
        runActionBar: String,
        tagActionBar: String,
        tipHolograms: String,
        wizardsCooldownMessages: String,
        doubleJumpFeather: String,
        wizardsPrestigeParticles: String,
      },
      modes: {
        bowSpleef: {
          wins: Number,
          deaths: Number,
          shotsLanded: Number,
          winLossRatio: Number,
          shotsGameRatio: Number,
        },
        tntRun: {
          wins: Number,
          deaths: Number,
          record: String,
          winLossRatio: Number,
          blocksRan: Number,
          potionsLanded: Number,
        },
        pvpRun: {
          wins: Number,
          kills: Number,
          deaths: Number,
          record: String,
          winLossRatio: Number,
          killDeathRatio: Number,
          killGameRatio: Number,
        },
        tntTag: {
          wins: Number,
          kills: Number,
          deaths: Number,
          tags: Number,
          tagKillRatio: Number,
          killWinRatio: Number,
          winLossRatio: Number,
        },
        wizards: {
          wins: Number,
          killDeathRatio: Number,
          killDeathAssistRatio: Number,
          kills: Number,
          deaths: Number,
          assists: Number,
          classes: Array,
        },
      },
    },
    bedwars: {
      gamesPlayed: Number,
      dreamGamesPlayed: Number,
      overallGamesPlayed: Number,
      level: Number,
      experience: Number,
      experienceGameRatio: Number,
      experienceWinRatio: Number,
      lootChests: Number,
      lootChestTypes: Object,
      coins: Number,
      winstreak: Number,
      wins: Number,
      losses: Number,
      winLossRatio: Number,
      kills: Number,
      deaths: Number,
      killDeathRatio: Number,
      killWinRatio: Number,
      killGameRatio: Number,
      finalKills: Number,
      finalDeaths: Number,
      finalKillDeathRatio: Number,
      finalKillWinRatio: Number,
      finalKillGameRatio: Number,
      bedsBroken: Number,
      bedsLost: Number,
      bedsBrokenBedsLostRatio: Number,
      bedsBrokenGameRatio: Number,
      bedsBrokenWinRatio: Number,
      voidFinalKills: Number,
      voidFinalDeaths: Number,
      voidFinalKillDeathRatio: Number,
      meleeFinalKills: Number,
      meleeFinalDeaths: Number,
      meleeFinalKillDeathRatio: Number,
      magicFinalKills: Number,
      magicFinalDeaths: Number,
      magicFinalKillDeathRatio: Number,
      fallFinalKills: Number,
      fallFinalDeaths: Number,
      fallFinalKillDeathRatio: Number,
      voidKills: Number,
      voidDeaths: Number,
      voidKillDeathRatio: Number,
      meleeKills: Number,
      meleeDeaths: Number,
      meleeKillDeathRatio: Number,
      magicKills: Number,
      magicDeaths: Number,
      magicKillDeathRatio: Number,
      fallKills: Number,
      fallDeaths: Number,
      fallKillDeathRatio: Number,
      resources: {
        iron: Number,
        gold: Number,
        diamonds: Number,
        emeralds: Number,
      },
      itemsPurchased: Number,
      upgradesPurchased: Number,
      modes: Object,
    },
    buildBattle: {
      wins: Number,
      coins: Number,
      gamesPlayed: Number,
      winsGamesPlayed: Number,
      timesVoted: Number,
      score: Number,
      modes: {
        soloNormal: {
          wins: Number,
        },
        soloPro: {
          wins: Number,
        },
        teamsNormal: {
          wins: Number,
          highestPoints: Number,
        },
        guessTheBuild: {
          wins: Number,
          correctGuesses: Number,
        },
      },
    },
    murderMystery: {
      coins: Number,
      coinsPickedUp: Number,
      wins: Number,
      deaths: Number,
      suicides: Number,
      kills: Number,
      winLossRatio: Number,
      killDeathRatio: Number,
      knifeKills: Number,
      thrownKnifeKills: Number,
      bowKills: Number,
      trapKills: Number,
      gamesPlayed: Number,
      detectiveWins: Number,
      murdererWins: Number,
      heroWins: Number,
      detectiveChance: Number,
      murdererChance: Number,
      maps: Object,
      modes: {
        classic: {
          coinsPickedUp: Number,
          wins: Number,
          deaths: Number,
          suicides: Number,
          kills: Number,
          winLossRatio: Number,
          killDeathRatio: Number,
          knifeKills: Number,
          thrownKnifeKills: Number,
          bowKills: Number,
          trapKills: Number,
          gamesPlayed: Number,
          detectiveWins: Number,
          murdererWins: Number,
          heroWins: Number,
        },
        doubleUp: {
          coinsPickedUp: Number,
          wins: Number,
          deaths: Number,
          suicides: Number,
          kills: Number,
          winLossRatio: Number,
          killDeathRatio: Number,
          knifeKills: Number,
          thrownKnifeKills: Number,
          bowKills: Number,
          trapKills: Number,
          gamesPlayed: Number,
          detectiveWins: Number,
          murdererWins: Number,
          heroWins: Number,
        },
        infection: {
          coinsPickedUp: Number,
          wins: Number,
          deaths: Number,
          kills: Number,
          winLossRatio: Number,
          killDeathRatio: Number,
          bowKills: Number,
          killsAsInfected: Number,
          killsAsSurvivor: Number,
          gamesPlayed: Number,
          timesLast: Number,
          survivorWins: Number,
        },
        assassins: {
          coinsPickedUp: Number,
          wins: Number,
          deaths: Number,
          kills: Number,
          winLossRatio: Number,
          killDeathRatio: Number,
          knifeKills: Number,
          thrownKnifeKills: Number,
          bowKills: Number,
          trapKills: Number,
          gamesPlayed: Number,
        },
      },
    },
  },
});

export const MinecraftModel = model<Minecraft>("Minecraft", MinecraftSchema);
